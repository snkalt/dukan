pipeline {
    agent any

    environment {
        IMAGE_NAME = 'dukan-backend'
        REGISTRY = 'your-docker-registry-url'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install') {
            steps {
                dir('backend') {
                    sh 'npm install'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('MySonarQubeServer') {
                    dir('backend') {
                        sh 'sonar-scanner -Dsonar.projectKey=dukan-backend -Dsonar.sources=. -Dsonar.language=js -Dsonar.sourceEncoding=UTF-8'
                    }
                }
            }
        }

        stage('Docker Build') {
            steps {
                dir('backend') {
                    sh "docker build -t ${IMAGE_NAME}:latest ."
                }
            }
        }

        stage('Trivy Scan') {
            steps {
                sh "trivy image ${IMAGE_NAME}:latest"
            }
        }

        stage('Push Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                      echo $PASSWORD | docker login -u $USERNAME --password-stdin ${REGISTRY}
                      docker tag ${IMAGE_NAME}:latest ${REGISTRY}/${IMAGE_NAME}:latest
                      docker push ${REGISTRY}/${IMAGE_NAME}:latest
                    """
                }
            }
        }

        stage('Deploy to ArgoCD') {
            steps {
                sh "argocd app sync dukan-backend"
            }
        }
    }
}
